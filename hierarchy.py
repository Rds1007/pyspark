# -*- coding: utf-8 -*-
"""hierarchy

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/166M4ZzkLepwm5hJ1KOelwHu4g7jWG4pZ
"""

from pyspark.sql import SparkSession
from pyspark.sql.functions import col,lit

spark = SparkSession.builder.appName("HierarchyExample").getOrCreate()

data = [
    (1, "Alice", None),
    (2, "Bob", 1),
    (3, "Charlie", 1),
    (4, "David", 2),
    (5, "Eva", 2),
]

columns = ["EmployeeID", "Name", "ManagerID"]

df = spark.createDataFrame(data, columns)
df.show()

df_m=df.filter(col("ManagerID").isNull()).withColumn("Level", lit(0))
df_total=df_m


while True:
  df_hirarchy=df.alias("e").join(df_m.alias("r"),col("e.ManagerID")==col("r.EmployeeID")).select(col("e.EmployeeID"), col("e.name"), col("e.ManagerID"), (col("r.level") + 1).alias("level"))
  #df_hirarchy.show()

  if df_hirarchy.count()==0:
    break
  df_total=df_total.union(df_hirarchy)
  df_m=df_hirarchy

df_total.show()