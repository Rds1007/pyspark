# -*- coding: utf-8 -*-
"""unionByName

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16POBU0ltUPZGYFhNxfiRWWiS2TNRKdrK
"""

from pyspark.sql import SparkSession
from pyspark.sql import Row

spark = SparkSession.builder.appName("Employee").getOrCreate()

data_1 = [Row(employee_name="Alice", employee_gender="F", employee_salary=70000),
         Row(employee_name="Bob", employee_gender="M", employee_salary=80000),
         Row(employee_name="Charlie", employee_gender="M", employee_salary=55000),
         Row(employee_name="David", employee_gender="M", employee_salary=45000),
         Row(employee_name="Eve", employee_gender="F", employee_salary=50000),
          Row(employee_name="Eve", employee_gender="F", employee_salary=50000)
         ]
df1 = spark.createDataFrame(data_1)

data_2 = [Row(employee_name="Frank", employee_gender="M", employee_salary=60000),
         Row(employee_name="Grace", employee_gender="F", employee_salary=65000),
         Row(employee_name="Hannah", employee_gender="F", employee_salary=70000),
         Row(employee_name="Ian", employee_gender="M", employee_salary=48000),
         Row(employee_name="Jill", employee_gender="F", employee_salary=53000),
          Row(employee_name="Eve", employee_gender="F", employee_salary=50000)
        ]

df2 = spark.createDataFrame(data_2)
df=df1.unionAll(df2).distinct()
df.show()

from pyspark.sql import SparkSession

spark = SparkSession.builder.getOrCreate()

# df1 has 3 columns
df1 = spark.createDataFrame([
    (1, "Alice", 25)
], ["id", "Nam", "age"])

# df2 has only 2 columns
df2 = spark.createDataFrame([
    (2, "Bob")
], ["id", "name"])

# Union by name, allowing missing columns
result = df1.unionByName(df2, allowMissingColumns=True)

result.show()